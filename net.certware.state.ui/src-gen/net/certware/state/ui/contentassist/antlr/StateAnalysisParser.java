/*
* generated by Xtext
*/
package net.certware.state.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import net.certware.state.services.StateAnalysisGrammarAccess;

public class StateAnalysisParser extends AbstractContentAssistParser {
	
	@Inject
	private StateAnalysisGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected net.certware.state.ui.contentassist.antlr.internal.InternalStateAnalysisParser createParser() {
		net.certware.state.ui.contentassist.antlr.internal.InternalStateAnalysisParser result = new net.certware.state.ui.contentassist.antlr.internal.InternalStateAnalysisParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSubsystemAccess().getGroup(), "rule__Subsystem__Group__0");
					put(grammarAccess.getDeploymentSetAccess().getGroup(), "rule__DeploymentSet__Group__0");
					put(grammarAccess.getDeploymentAccess().getGroup(), "rule__Deployment__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getStateVariableAccess().getGroup(), "rule__StateVariable__Group__0");
					put(grammarAccess.getControllerAccess().getGroup(), "rule__Controller__Group__0");
					put(grammarAccess.getEstimatorAccess().getGroup(), "rule__Estimator__Group__0");
					put(grammarAccess.getStateConstraintAccess().getGroup(), "rule__StateConstraint__Group__0");
					put(grammarAccess.getStateUpdateAccess().getGroup(), "rule__StateUpdate__Group__0");
					put(grammarAccess.getHardwareCommandAccess().getGroup(), "rule__HardwareCommand__Group__0");
					put(grammarAccess.getHardwareMeasurementAccess().getGroup(), "rule__HardwareMeasurement__Group__0");
					put(grammarAccess.getDeviceAccess().getGroup(), "rule__Device__Group__0");
					put(grammarAccess.getDeviceCommandAccess().getGroup(), "rule__DeviceCommand__Group__0");
					put(grammarAccess.getDeviceMeasurementAccess().getGroup(), "rule__DeviceMeasurement__Group__0");
					put(grammarAccess.getHardwareAdapterAccess().getGroup(), "rule__HardwareAdapter__Group__0");
					put(grammarAccess.getSystemAccess().getSubsystemsAssignment(), "rule__System__SubsystemsAssignment");
					put(grammarAccess.getSubsystemAccess().getNameAssignment_1(), "rule__Subsystem__NameAssignment_1");
					put(grammarAccess.getSubsystemAccess().getDeploymentSetsAssignment_2(), "rule__Subsystem__DeploymentSetsAssignment_2");
					put(grammarAccess.getDeploymentSetAccess().getNameAssignment_0(), "rule__DeploymentSet__NameAssignment_0");
					put(grammarAccess.getDeploymentSetAccess().getDeploymentsAssignment_1(), "rule__DeploymentSet__DeploymentsAssignment_1");
					put(grammarAccess.getDeploymentAccess().getNameAssignment_0(), "rule__Deployment__NameAssignment_0");
					put(grammarAccess.getDeploymentAccess().getComponentsAssignment_1(), "rule__Deployment__ComponentsAssignment_1");
					put(grammarAccess.getComponentAccess().getNameAssignment_0(), "rule__Component__NameAssignment_0");
					put(grammarAccess.getComponentAccess().getSvAssignment_1(), "rule__Component__SvAssignment_1");
					put(grammarAccess.getComponentAccess().getControllerAssignment_2(), "rule__Component__ControllerAssignment_2");
					put(grammarAccess.getComponentAccess().getEstimatorAssignment_3(), "rule__Component__EstimatorAssignment_3");
					put(grammarAccess.getStateVariableAccess().getNameAssignment_0(), "rule__StateVariable__NameAssignment_0");
					put(grammarAccess.getStateVariableAccess().getStateConstraintsAssignment_1(), "rule__StateVariable__StateConstraintsAssignment_1");
					put(grammarAccess.getStateVariableAccess().getStateUpdatesAssignment_2(), "rule__StateVariable__StateUpdatesAssignment_2");
					put(grammarAccess.getControllerAccess().getNameAssignment_0(), "rule__Controller__NameAssignment_0");
					put(grammarAccess.getControllerAccess().getStateConstraintAssignment_1(), "rule__Controller__StateConstraintAssignment_1");
					put(grammarAccess.getControllerAccess().getHardwareCommandAssignment_2(), "rule__Controller__HardwareCommandAssignment_2");
					put(grammarAccess.getEstimatorAccess().getNameAssignment_0(), "rule__Estimator__NameAssignment_0");
					put(grammarAccess.getEstimatorAccess().getHardwareMeasurementAssignment_1(), "rule__Estimator__HardwareMeasurementAssignment_1");
					put(grammarAccess.getStateConstraintAccess().getNameAssignment_0(), "rule__StateConstraint__NameAssignment_0");
					put(grammarAccess.getStateConstraintAccess().getControllersAssignment_1(), "rule__StateConstraint__ControllersAssignment_1");
					put(grammarAccess.getStateConstraintAccess().getEstimatorsAssignment_2(), "rule__StateConstraint__EstimatorsAssignment_2");
					put(grammarAccess.getStateUpdateAccess().getNameAssignment_0(), "rule__StateUpdate__NameAssignment_0");
					put(grammarAccess.getStateUpdateAccess().getControllersAssignment_1(), "rule__StateUpdate__ControllersAssignment_1");
					put(grammarAccess.getStateUpdateAccess().getEstimatorsAssignment_2(), "rule__StateUpdate__EstimatorsAssignment_2");
					put(grammarAccess.getHardwareCommandAccess().getNameAssignment_0(), "rule__HardwareCommand__NameAssignment_0");
					put(grammarAccess.getHardwareCommandAccess().getControllerAssignment_1(), "rule__HardwareCommand__ControllerAssignment_1");
					put(grammarAccess.getHardwareCommandAccess().getAdapterAssignment_2(), "rule__HardwareCommand__AdapterAssignment_2");
					put(grammarAccess.getHardwareMeasurementAccess().getNameAssignment_0(), "rule__HardwareMeasurement__NameAssignment_0");
					put(grammarAccess.getHardwareMeasurementAccess().getAdapterAssignment_1(), "rule__HardwareMeasurement__AdapterAssignment_1");
					put(grammarAccess.getHardwareMeasurementAccess().getEstimatorAssignment_2(), "rule__HardwareMeasurement__EstimatorAssignment_2");
					put(grammarAccess.getDeviceAccess().getNameAssignment_0(), "rule__Device__NameAssignment_0");
					put(grammarAccess.getDeviceAccess().getDescriptionAssignment_1(), "rule__Device__DescriptionAssignment_1");
					put(grammarAccess.getDeviceCommandAccess().getNameAssignment_0(), "rule__DeviceCommand__NameAssignment_0");
					put(grammarAccess.getDeviceCommandAccess().getAdapterAssignment_1(), "rule__DeviceCommand__AdapterAssignment_1");
					put(grammarAccess.getDeviceCommandAccess().getDeviceAssignment_2(), "rule__DeviceCommand__DeviceAssignment_2");
					put(grammarAccess.getDeviceMeasurementAccess().getNameAssignment_0(), "rule__DeviceMeasurement__NameAssignment_0");
					put(grammarAccess.getDeviceMeasurementAccess().getAdapterAssignment_1(), "rule__DeviceMeasurement__AdapterAssignment_1");
					put(grammarAccess.getDeviceMeasurementAccess().getDeviceAssignment_2(), "rule__DeviceMeasurement__DeviceAssignment_2");
					put(grammarAccess.getHardwareAdapterAccess().getNameAssignment_0(), "rule__HardwareAdapter__NameAssignment_0");
					put(grammarAccess.getHardwareAdapterAccess().getHardwareCommandsAssignment_1(), "rule__HardwareAdapter__HardwareCommandsAssignment_1");
					put(grammarAccess.getHardwareAdapterAccess().getHardwareMeasurementsAssignment_2(), "rule__HardwareAdapter__HardwareMeasurementsAssignment_2");
					put(grammarAccess.getHardwareAdapterAccess().getDeviceCommandsAssignment_3(), "rule__HardwareAdapter__DeviceCommandsAssignment_3");
					put(grammarAccess.getHardwareAdapterAccess().getDeviceMeasurementsAssignment_4(), "rule__HardwareAdapter__DeviceMeasurementsAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			net.certware.state.ui.contentassist.antlr.internal.InternalStateAnalysisParser typedParser = (net.certware.state.ui.contentassist.antlr.internal.InternalStateAnalysisParser) parser;
			typedParser.entryRuleSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public StateAnalysisGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(StateAnalysisGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
